INFO:__main__:creating datasets...
INFO:src.data.dataset:loaded 2744 train samples with 26 attributes
INFO:src.data.dataset:loaded 385 val samples with 26 attributes
INFO:src.data.dataset:loaded 747 test samples with 26 attributes
INFO:__main__:creating model...
/Users/seunadekunle/miniconda3/envs/style_classifier/lib/python3.9/site-packages/torch/optim/lr_scheduler.py:62: UserWarning: The verbose parameter is deprecated. Please use get_last_lr() to access the learning rate.
  warnings.warn(
INFO:__main__:starting training...
INFO:src.utils.trainer:Epoch 1/50
Training: 100%|████████████████████████████████| 86/86 [19:24<00:00, 13.54s/it, loss=4.16, avg_loss=4.47]
Validating: 100%|████████████████████████████████████████████████████████| 13/13 [00:50<00:00,  3.89s/it]
INFO:src.utils.trainer:Epoch 2/50
Training: 100%|████████████████████████████████| 86/86 [18:46<00:00, 13.10s/it, loss=4.07, avg_loss=4.08]
Validating: 100%|████████████████████████████████████████████████████████| 13/13 [00:48<00:00,  3.76s/it]
INFO:src.utils.trainer:Epoch 3/50
Training: 100%|█████████████████████████████████| 86/86 [20:28<00:00, 14.28s/it, loss=4.3, avg_loss=4.04]
Validating: 100%|████████████████████████████████████████████████████████| 13/13 [00:58<00:00,  4.47s/it]
INFO:src.utils.trainer:Epoch 4/50
Training: 100%|████████████████████████████████| 86/86 [22:24<00:00, 15.63s/it, loss=3.98, avg_loss=4.02]
Validating: 100%|████████████████████████████████████████████████████████| 13/13 [01:02<00:00,  4.82s/it]
INFO:src.utils.trainer:Epoch 5/50
Training: 100%|████████████████████████████████████| 86/86 [21:34<00:00, 15.05s/it, loss=3.9, avg_loss=4]
Validating: 100%|████████████████████████████████████████████████████████| 13/13 [00:58<00:00,  4.46s/it]
INFO:src.utils.trainer:Epoch 6/50
Training: 100%|███████████████████████████████████| 86/86 [22:32<00:00, 15.73s/it, loss=3.92, avg_loss=4]
Validating: 100%|████████████████████████████████████████████████████████| 13/13 [00:53<00:00,  4.12s/it]
INFO:src.utils.trainer:Epoch 7/50
Training: 100%|████████████████████████████████| 86/86 [21:02<00:00, 14.68s/it, loss=3.98, avg_loss=3.98]
Validating: 100%|████████████████████████████████████████████████████████| 13/13 [00:51<00:00,  3.98s/it]
INFO:src.utils.trainer:Epoch 8/50
Training: 100%|████████████████████████████████| 86/86 [21:48<00:00, 15.22s/it, loss=3.91, avg_loss=3.98]
Validating: 100%|████████████████████████████████████████████████████████| 13/13 [01:04<00:00,  4.95s/it]
INFO:src.utils.trainer:Epoch 9/50
Training: 100%|████████████████████████████████| 86/86 [22:18<00:00, 15.57s/it, loss=3.47, avg_loss=3.98]
Validating: 100%|████████████████████████████████████████████████████████| 13/13 [01:02<00:00,  4.81s/it]
INFO:src.utils.trainer:Epoch 10/50
Training: 100%|████████████████████████████████| 86/86 [21:01<00:00, 14.67s/it, loss=4.03, avg_loss=3.97]
Validating: 100%|████████████████████████████████████████████████████████| 13/13 [00:53<00:00,  4.12s/it]
INFO:src.utils.trainer:Epoch 11/50
Training: 100%|████████████████████████████████| 86/86 [21:13<00:00, 14.81s/it, loss=4.16, avg_loss=3.97]
Validating: 100%|████████████████████████████████████████████████████████| 13/13 [01:00<00:00,  4.67s/it]
INFO:src.utils.trainer:Epoch 12/50
Training: 100%|████████████████████████████████| 86/86 [20:09<00:00, 14.07s/it, loss=4.19, avg_loss=3.97]
Validating: 100%|████████████████████████████████████████████████████████| 13/13 [00:51<00:00,  3.95s/it]
INFO:src.utils.trainer:Epoch 13/50
Training: 100%|████████████████████████████████| 86/86 [18:41<00:00, 13.04s/it, loss=4.07, avg_loss=3.96]
Validating: 100%|████████████████████████████████████████████████████████| 13/13 [00:49<00:00,  3.79s/it]
INFO:src.utils.trainer:early stopping triggered after 13 epochs
INFO:__main__:evaluating on test set...
/Users/seunadekunle/school/561/style_classifier/train.py:397: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load('best_model.pt'))
Traceback (most recent call last):
  File "/Users/seunadekunle/school/561/style_classifier/train.py", line 539, in <module>
    main()
  File "/Users/seunadekunle/school/561/style_classifier/train.py", line 398, in main
    test_loss, test_acc = evaluate_model(
  File "/Users/seunadekunle/school/561/style_classifier/train.py", line 449, in evaluate_model
    for batch in tqdm(data_loader, desc='Evaluating'):
NameError: name 'tqdm' is not defined
